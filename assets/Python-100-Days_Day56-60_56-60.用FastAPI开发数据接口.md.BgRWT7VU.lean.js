import{_ as a,c as i,a2 as n,o as e}from"./chunks/framework.BeuUUHFt.js";const t="/cherish-frontend-blog/assets/run-first-demo.CZDdpjRz.png",l="/cherish-frontend-blog/assets/first-demo-docs.BaCZwOgX.png",F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Python-100-Days/Day56-60/56-60.用FastAPI开发数据接口.md","filePath":"Python-100-Days/Day56-60/56-60.用FastAPI开发数据接口.md","lastUpdated":1731997977000}'),p={name:"Python-100-Days/Day56-60/56-60.用FastAPI开发数据接口.md"};function r(h,s,o,k,d,B){return e(),i("div",null,s[0]||(s[0]=[n(`<h2 id="用fastapi开发网络数据接口" tabindex="-1">用FastAPI开发网络数据接口 <a class="header-anchor" href="#用fastapi开发网络数据接口" aria-label="Permalink to &quot;用FastAPI开发网络数据接口&quot;">​</a></h2><p>FastAPI 是一个用于构建API（网络数据接口）的现代、高性能的Web框架，基于Python 3.6+，使用了Python中的类型提示进行类型检查，非常符合工程化开发的需求，在业界有非常好的口碑。下面，我们先用代码告诉大家FastAPI到底能做什么，然后再来讲解它的方方面面。</p><h3 id="fastapi五分钟上手" tabindex="-1">FastAPI五分钟上手 <a class="header-anchor" href="#fastapi五分钟上手" aria-label="Permalink to &quot;FastAPI五分钟上手&quot;">​</a></h3><ol><li><p>安装依赖库和ASGI服务器（支持异步I/O的Python服务器）。</p><div class="language-Bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">pip</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379;"> fastapi</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">pip</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379;"> uvicorn</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p>编写代码<code>main.py</code>。</p><div class="language-Python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> fastapi </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> FastAPI</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">app </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> FastAPI</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">@app</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">get</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&#39;/&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> say_hello</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&#39;code&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 200</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &#39;message&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &#39;hello, world!&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li><li><p>运行服务。</p><div class="language-Bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">uvicorn</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379;"> main:app</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66;"> --reload</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p><strong>说明</strong>：上面运行uvicorn时使用的<code>--reload</code>参数会在代码发生变更时自动重新加载新的内容，这个参数在开发阶段非常的有用。</p></blockquote></li><li><p>访问服务。</p></li></ol><p><img src="`+t+'" alt=""></p><ol start="5"><li><p>查看文档。</p><p><img src="'+l+'" alt=""></p><blockquote><p><strong>注意</strong>：FastAPI会基于<a href="https://swagger.io/tools/swagger-ui/" target="_blank" rel="noreferrer">Swagger UI</a>自动为数据接口生成对应的文档。</p></blockquote></li></ol><h3 id="请求和响应" tabindex="-1">请求和响应 <a class="header-anchor" href="#请求和响应" aria-label="Permalink to &quot;请求和响应&quot;">​</a></h3><h3 id="接入关系型数据库" tabindex="-1">接入关系型数据库 <a class="header-anchor" href="#接入关系型数据库" aria-label="Permalink to &quot;接入关系型数据库&quot;">​</a></h3><p>我们可以使用SQLAlchemy三方库来实现对关系型数据库的接入。SQLAlchemy是一个ORM（对象关系映射）框架，ORM框架可以解决Python程序的面向对象模型和关系型数据库的关系模型并不匹配的问题，使得我们可以用面向对象的方式实现数据的CRUD操作。</p><h3 id="依赖注入" tabindex="-1">依赖注入 <a class="header-anchor" href="#依赖注入" aria-label="Permalink to &quot;依赖注入&quot;">​</a></h3><h3 id="中间件" tabindex="-1">中间件 <a class="header-anchor" href="#中间件" aria-label="Permalink to &quot;中间件&quot;">​</a></h3><h3 id="异步化" tabindex="-1">异步化 <a class="header-anchor" href="#异步化" aria-label="Permalink to &quot;异步化&quot;">​</a></h3><h3 id="虚拟化部署-docker" tabindex="-1">虚拟化部署（Docker） <a class="header-anchor" href="#虚拟化部署-docker" aria-label="Permalink to &quot;虚拟化部署（Docker）&quot;">​</a></h3><h3 id="项目实战-车辆违章查询" tabindex="-1">项目实战：车辆违章查询 <a class="header-anchor" href="#项目实战-车辆违章查询" aria-label="Permalink to &quot;项目实战：车辆违章查询&quot;">​</a></h3>',14)]))}const g=a(p,[["render",r]]);export{F as __pageData,g as default};
