import{_ as i,c as a,a2 as e,o as t}from"./chunks/framework.BeuUUHFt.js";const o=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"4.库/jquery/用法.md","filePath":"4.库/jquery/用法.md","lastUpdated":1731997977000}'),n={name:"4.库/jquery/用法.md"};function h(l,s,p,k,d,r){return t(),a("div",null,s[0]||(s[0]=[e(`<h2 id="获取所有类名为svgimg的第一个子元素" tabindex="-1">获取所有类名为svgImg的第一个子元素 <a class="header-anchor" href="#获取所有类名为svgimg的第一个子元素" aria-label="Permalink to &quot;获取所有类名为svgImg的第一个子元素&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> firstChildrenArray</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> $</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&quot;.svgImg&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">map</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> () {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">firstElementChild</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}).</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">get</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="firstchild和firstelementchild区别" tabindex="-1">firstChild和firstElementChild区别 <a class="header-anchor" href="#firstchild和firstelementchild区别" aria-label="Permalink to &quot;firstChild和firstElementChild区别&quot;">​</a></h3><p><code>firstChild</code> 和 <code>firstElementChild</code> 是 DOM 中两个不同的属性，用于获取元素的第一个子节点。</p><ul><li><code>firstChild</code> 属性返回元素的第一个子节点，包括元素节点、文本节点或注释节点。如果没有子节点，则返回 <code>null</code>。</li><li><code>firstElementChild</code> 属性返回元素的第一个子元素节点，只包括元素节点。如果没有子元素节点，则返回 <code>null</code>。</li></ul><p>区别在于 <code>firstChild</code> 可能返回元素的文本节点或注释节点，而 <code>firstElementChild</code> 只返回元素的第一个子元素节点，排除其他类型的节点。</p><p>在获取第一个子元素时，如果只关注元素节点而不关心文本节点或注释节点，那么使用 <code>firstElementChild</code> 更合适。这样可以避免在处理节点时需要进行额外的类型检查。</p><h2 id="隐藏所有onmouseover-top-showtip-evt-的dom元素" tabindex="-1">隐藏所有<code>onmouseover=&quot;top.ShowTip(evt)</code>的dom元素 <a class="header-anchor" href="#隐藏所有onmouseover-top-showtip-evt-的dom元素" aria-label="Permalink to &quot;隐藏所有\`onmouseover=&quot;top.ShowTip(evt)\`的dom元素&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> $</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&#39;text[onmouseover=&quot;top.ShowTip(evt)&quot;]&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">hide</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="设置元素宽高" tabindex="-1">设置元素宽高 <a class="header-anchor" href="#设置元素宽高" aria-label="Permalink to &quot;设置元素宽高&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">dom</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">css</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&quot;height&quot;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> dom</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">parentNode</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">clientHeight</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">dom</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">css</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&quot;width&quot;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> dom</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">parentNode</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">clientWidth</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,11)]))}const F=i(n,[["render",h]]);export{o as __pageData,F as default};
