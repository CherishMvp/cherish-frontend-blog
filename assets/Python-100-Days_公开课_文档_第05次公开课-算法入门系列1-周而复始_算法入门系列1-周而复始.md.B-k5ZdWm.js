import{_ as i,c as a,a2 as n,o as h}from"./chunks/framework.BeuUUHFt.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Python-100-Days/公开课/文档/第05次公开课-算法入门系列1-周而复始/算法入门系列1-周而复始.md","filePath":"Python-100-Days/公开课/文档/第05次公开课-算法入门系列1-周而复始/算法入门系列1-周而复始.md","lastUpdated":1731997977000}'),B={name:"Python-100-Days/公开课/文档/第05次公开课-算法入门系列1-周而复始/算法入门系列1-周而复始.md"};function l(p,s,k,t,e,r){return h(),a("div",null,s[0]||(s[0]=[n(`<h2 id="算法入门系列课程1-周而复始" tabindex="-1">算法入门系列课程1 - 周而复始 <a class="header-anchor" href="#算法入门系列课程1-周而复始" aria-label="Permalink to &quot;算法入门系列课程1 - 周而复始&quot;">​</a></h2><h3 id="算法概述" tabindex="-1">算法概述 <a class="header-anchor" href="#算法概述" aria-label="Permalink to &quot;算法概述&quot;">​</a></h3><ol><li><p>什么是算法？</p><p>解决问题的正确方法和具体的实施步骤。</p><p>例子1：如何在两栋相距50m的大楼的两个房间牵一条线（两个房间都有窗）？</p><ul><li>养一只鸟（如鸽子），将线送过去</li><li>用很长的杆子将线递过去</li><li>用无人机（遥控飞行器）将线送过去</li></ul><p>如何评价这些方法的好坏？<strong>少花钱，不费事</strong>！</p><p>例子2：大教室里坐了几百名学生一起听课，如何快速的统计学生人数？</p><p>例子3：向列表容器中<strong>逆向</strong>插入100000个元素。</p><ul><li><p>方法1：</p><div class="language-Python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">nums </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> []</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2;"> range</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">100000</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">    nums</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">append</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(i)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">nums</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">reverse</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>方法2：</p><div class="language-Python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">nums </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> []</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2;"> range</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">100000</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">    nums</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">insert</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">, i)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ul><p>例子3：生成Fibonacci数列（前100个Fibonacci数）。</p><ul><li><p>方法1 - 递推：</p><div class="language-Python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">a</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> b </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 1</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> num </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2;"> range</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">101</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">    a</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> b </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> b</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> a </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> b</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">num</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">: </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">a</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>方法2 - 递归：</p><div class="language-Python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> fib</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">num</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> num </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 1</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> fib</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(num </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> fib</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(num </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> num </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2;"> range</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">101</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">num</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">: </span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">fib</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(num)</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li><li><p>方法3 - 改进的递归：</p><div class="language-Python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> fib</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">num</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> temp</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">{}</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> num </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 1</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">    elif</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> num </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">not</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;"> in</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> temp</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">        temp</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">num</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">]</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> fib</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(num </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> fib</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(num </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> temp</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">num</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li><li><p>方法4 - 改进的递归：</p><div class="language-Python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> functools </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> lru_cache</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">@lru_cache</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> fib</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">num</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> num </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 1</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> fib</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(num </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> fib</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(num </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li></ul></li><li><p>如何评价算法的好坏？</p><p><a href="https://zh.wikipedia.org/wiki/%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6" target="_blank" rel="noreferrer">渐近时间复杂度</a>和渐近空间复杂度。</p></li><li><p>大<em><strong>O</strong></em>符号的意义？</p><p>表示一个函数相对于输入规模的增长速度，也可以称之为函数的数量级。</p><table tabindex="0"><thead><tr><th>大<em>O</em>符号</th><th>说明</th><th>例子</th></tr></thead><tbody><tr><td>$$O(c)$$</td><td>常量时间复杂度</td><td>布隆过滤器 / 哈希存储</td></tr><tr><td>$$O(log_2n)$$</td><td>对数时间复杂度</td><td>二分查找（折半查找）</td></tr><tr><td>$$O(n)$$</td><td>线性时间复杂度</td><td>顺序查找 / 桶排序</td></tr><tr><td>$$O(n*log_2n)$$</td><td>对数线性时间复杂度</td><td>高级排序算法（归并排序、快速排序）</td></tr><tr><td>$$O(n^2)$$</td><td>平方时间复杂度</td><td>简单排序算法（选择排序、插入排序、冒泡排序）</td></tr><tr><td>$$O(n^3)$$</td><td>立方时间复杂度</td><td>Floyd算法 / 矩阵乘法运算</td></tr><tr><td>$$O(2^n)$$</td><td>几何级数时间复杂度</td><td>汉诺塔</td></tr><tr><td>$$O(n!)$$</td><td>阶乘时间复杂度</td><td>旅行经销商问题</td></tr></tbody></table></li></ol><h3 id="穷举法" tabindex="-1">穷举法 <a class="header-anchor" href="#穷举法" aria-label="Permalink to &quot;穷举法&quot;">​</a></h3><p>在计算机科学中，<strong>穷举法</strong>或者<strong>暴力搜索法</strong>是一个非常非常直观的解决问题的方法，这种方法通过一项一项的列举解决方案所有可能的候选项以及检查每个候选项是否符合问题的描述，最终得到问题的解。</p><p>虽然暴力搜索很容易实现，并且如果解决方案存在它就一定能够找到，但是它的代价是和候选方案的数量成比例的，由于这一点，在很多实际问题中，消耗的代价会随着问题规模的增加而快速地增长。因此，当问题规模有限或当存在可用于将候选解决方案的集合减少到可管理大小时，就可以使用暴力搜索。另外，当实现方法的简单度比速度更重要的时候，也可以考虑使用这种方法。</p><h3 id="经典例子" tabindex="-1">经典例子 <a class="header-anchor" href="#经典例子" aria-label="Permalink to &quot;经典例子&quot;">​</a></h3><ol><li><p><strong>百钱百鸡</strong>问题：公鸡5元一只，母鸡3元一只，小鸡1元三只，用100元买一百只鸡，问公鸡、母鸡、小鸡各有多少只？</p><div class="language-Python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> x </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2;"> range</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">21</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> y </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2;"> range</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">34</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">        z </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 100</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> -</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> x </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> y</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> z </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">%</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;"> and</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> x </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> y </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> z </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">//</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 100</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2;">            print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(x, y, z)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li><li><p><strong>五人分鱼</strong>问题：ABCDE五人在某天夜里合伙捕鱼，最后疲惫不堪各自睡觉。第二天A第一个醒来，他将鱼分为5份，扔掉多余的1条，拿走了属于自己的一份；B第二个醒来，也将鱼分为5份，扔掉多余的1条，拿走属于自己的一份；然后C、D、E依次醒来，也按同样的方式分鱼，问他们至少捕了多少条鱼？</p><div class="language-Python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">fish </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 6</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">while</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66;"> True</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">    total </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> fish</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">    enough </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66;"> True</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> _ </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2;"> range</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> (total </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">%</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">            total </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> (total </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">//</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 4</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">        else</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">            enough </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66;"> False</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">            break</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> enough</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2;">        print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(fish)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">        break</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">    fish </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">+=</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 5</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div></li><li><p><strong>暴力破解口令</strong>：</p><div class="language-Python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> re</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> PyPDF2</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">with</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2;"> open</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&#39;Python_Tricks_encrypted.pdf&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&#39;rb&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;"> as</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> pdf_file_stream</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">    reader </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> PyPDF2</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">PdfFileReader</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(pdf_file_stream)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">    with</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2;"> open</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&#39;dictionary.txt&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&#39;r&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;"> as</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> txt_file_stream</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">        file_iter </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2;"> iter</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">lambda</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">: txt_file_stream.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">readline</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(), </span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&#39;&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">        for</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> word </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> file_iter</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">            word </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> re</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">sub</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">r</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">&#39;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E06C75;">\\s</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&#39;&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">, word)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">            if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> reader</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">decrypt</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(word):</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#56B6C2;">                print</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(word)</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">                break</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></li></ol>`,8)]))}const y=i(B,[["render",l]]);export{F as __pageData,y as default};
