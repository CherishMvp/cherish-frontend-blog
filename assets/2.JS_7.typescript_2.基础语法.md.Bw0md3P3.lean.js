import{_ as i,c as a,a2 as n,o as l}from"./chunks/framework.BeuUUHFt.js";const F=JSON.parse('{"title":"基础语法","description":"","frontmatter":{},"headers":[],"relativePath":"2.JS/7.typescript/2.基础语法.md","filePath":"2.JS/7.typescript/2.基础语法.md","lastUpdated":1731997977000}'),h={name:"2.JS/7.typescript/2.基础语法.md"};function k(t,s,p,e,B,r){return l(),a("div",null,s[0]||(s[0]=[n(`<h1 id="基础语法" tabindex="-1">基础语法 <a class="header-anchor" href="#基础语法" aria-label="Permalink to &quot;基础语法&quot;">​</a></h1><h2 id="类型注解" tabindex="-1">类型注解 <a class="header-anchor" href="#类型注解" aria-label="Permalink to &quot;类型注解&quot;">​</a></h2><p>这是<code>TypeScript</code>最基础的语法，为变量指明类型，称为<strong>类型注解</strong>，语法为：<code>变量:类型</code></p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> isDone</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> boolean</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66;"> false</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="基础类型" tabindex="-1">基础类型 <a class="header-anchor" href="#基础类型" aria-label="Permalink to &quot;基础类型&quot;">​</a></h2><h3 id="原始数据类型" tabindex="-1">原始数据类型 <a class="header-anchor" href="#原始数据类型" aria-label="Permalink to &quot;原始数据类型&quot;">​</a></h3><p><code>JavaScript</code>分为原始数据类型和对象类型，原始数据类型有：<code>number</code>、<code>string</code>、<code>boolean</code>、<code>null</code>、<code>undefined</code></p><p>在<code>TypeScript</code>中，相应类型注解为：</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> tsNum</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 123</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> tsStr</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &#39;abc&#39;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> tsFlag</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> boolean</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66;"> true</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> tsNull</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> null</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66;"> null</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> tsUndefined</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> undefined</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66;"> undefined</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="null与undefined" tabindex="-1">null与undefined <a class="header-anchor" href="#null与undefined" aria-label="Permalink to &quot;null与undefined&quot;">​</a></h3><p>在<code>TypeScript</code>中，<code>null</code>和<code>undefined</code>是所有类型的子类型，也就是说可以把<code>undefined</code>或<code>null</code>赋值给原始数据类型的变量</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> tsNumber1</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66;"> undefined</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> tsNumber2</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66;"> null</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="void" tabindex="-1">void <a class="header-anchor" href="#void" aria-label="Permalink to &quot;void&quot;">​</a></h3><p><code>JavaScript</code>中，是没有空值(<code>void</code>)的概念的，但在<code>TypeScript</code>中，可以使用<code>void</code>来表示一个没有返回值的函数</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> sayHello</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> ()</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> void</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">  console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&#39;Hello, world&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>也可以定义一个<code>void</code>类型的变量，不过这样的变量并没有什么意义，因为只能给这种变量赋值为<code>null</code>或<code>undefined</code></p><p>这也是<code>void</code>跟<code>null</code>和<code>undefined</code>的区别，对于<code>void</code>而言，它只能被赋值为<code>null</code>或者<code>undefined</code></p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> voidValue1</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> void</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66;"> null</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> voidValue2</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> void</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66;"> undefined</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 报错</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> voidValue1</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> void</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 123</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> voidValue2</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> void</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &#39;abc&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="any" tabindex="-1">any <a class="header-anchor" href="#any" aria-label="Permalink to &quot;any&quot;">​</a></h3><p>任意值<code>any</code>用来表示可以接受任何类型的值</p><p>以下代码会报错,因为变量被定义为<code>number</code>，那么它只能接受<code>number</code>类型的值，改变其类型，会编译报错</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> tsNumber</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 123</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">tsNumber</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &#39;123&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>但是如果一个变量被定义为<code>any</code>，那么代表它可以接受任何类型的值：</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 类型正确</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> tsAny</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> any</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 123</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">tsAny</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &#39;123&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>如果定义了一个变量，没有指定其类型，也没有初始值，那么它默认为<code>any</code>类型</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 类型正确，不会报错，因为默认为any类型</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> tsValue</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">tsValue</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 123</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">tsValue</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &#39;123&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="接口" tabindex="-1">接口 <a class="header-anchor" href="#接口" aria-label="Permalink to &quot;接口&quot;">​</a></h2><p>接口<code>interface</code>用于为对象提供类型注解, 接口<code>interface</code>中的任何代码都不会被最后编译到<code>JavaScript</code>中</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">interface</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> Person</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  age</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> person</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> Person</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &#39;why&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  age</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 23</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>在上方代码中，<code>person</code>对象的类型是接口<code>Person</code>，那么<code>person</code>对象的所有属性只能是<code>Person</code>规定的属性，且属性值的类型也必须和<code>Person</code>中规定的一致，多一个属性或者少一个属性都会报错</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">interface</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> Person</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  age</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 报错</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> person1</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> Person</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &#39;why&#39;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 报错</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> person2</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> Person</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &#39;why&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  age</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 23</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  sex</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &#39;man&#39;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="接口中的任意属性" tabindex="-1">接口中的任意属性 <a class="header-anchor" href="#接口中的任意属性" aria-label="Permalink to &quot;接口中的任意属性&quot;">​</a></h3><p>以上一个例子为基础，假设接口只对<code>name</code>和<code>age</code>做规定，其它任何属性名与属性类型都是可以的，那么可以如下方式进行定义：</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">interface</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> Person</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  age</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 任意属性名与属性类型</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">  [</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">propName</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">]</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> any</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 类型正确</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> person</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> Person</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &#39;why&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  age</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 23</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  sex</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &#39;man&#39;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="接口中的可选属性" tabindex="-1">接口中的可选属性 <a class="header-anchor" href="#接口中的可选属性" aria-label="Permalink to &quot;接口中的可选属性&quot;">​</a></h3><p>?:可选属性，代表该属性可存在可不存在，但存在的话类型必须无误</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">interface</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> Person</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  age</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // age属性是可选的</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 类型正确</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> person1</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> Person</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &#39;why&#39;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 报错</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> person2</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> Person</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &#39;why&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  age</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &quot;123&quot;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="接口中的只读属性" tabindex="-1">接口中的只读属性 <a class="header-anchor" href="#接口中的只读属性" aria-label="Permalink to &quot;接口中的只读属性&quot;">​</a></h3><p>readonly表示属性只读，不可修改，在接口中标记了属性为只读的， 那么其不能被赋值。</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">interface</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> Person</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">  readonly</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> age</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> person</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> Person</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &#39;why&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  age</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 23</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 报错</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">person</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">age</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 32</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="函数类型" tabindex="-1">函数类型 <a class="header-anchor" href="#函数类型" aria-label="Permalink to &quot;函数类型&quot;">​</a></h2><p>为参数和返回值设置类型，不定义相应类型的话，默认为<code>any</code></p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * </span><span style="--shiki-light:#F97583;--shiki-light-font-style:inherit;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@param</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> x</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 数字1</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * </span><span style="--shiki-light:#F97583;--shiki-light-font-style:inherit;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@param</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> y</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 数字2</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * </span><span style="--shiki-light:#F97583;--shiki-light-font-style:inherit;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@returns</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 数字1和数字2之和</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> add</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">x</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> y</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> x</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> y</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">add</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">))    </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 输出3</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">add</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &#39;2&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">))  </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 报错</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>也可以使用interface为函数设置类型</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">interface</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> AddInterface</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">x</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> y</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * </span><span style="--shiki-light:#F97583;--shiki-light-font-style:inherit;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@param</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> x</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 数字1</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * </span><span style="--shiki-light:#F97583;--shiki-light-font-style:inherit;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@param</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> y</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 数字2</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * </span><span style="--shiki-light:#F97583;--shiki-light-font-style:inherit;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@returns</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 数字1和数字2之和</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> add</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> AddInterface</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">x</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> y</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> x</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> y</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">add</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)) </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 输出3</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">add</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &#39;2&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">))  </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 报错</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="可选参数" tabindex="-1">可选参数 <a class="header-anchor" href="#可选参数" aria-label="Permalink to &quot;可选参数&quot;">​</a></h3><p>函数接受可选的参数，使用?:</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> getArea</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">a</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> b</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  b</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;"> ?</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> a</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> b</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;"> :</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> a</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> a</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">getArea</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">))     </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 16</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">getArea</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">))  </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 20</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>可选参数必须放在最后一个位置，否则会报错</p></div><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 报错</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> getArea</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">b</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> a</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  b</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;"> ?</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> a</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> b</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;"> :</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> a</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> a</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="参数默认值" tabindex="-1">参数默认值 <a class="header-anchor" href="#参数默认值" aria-label="Permalink to &quot;参数默认值&quot;">​</a></h3><p>在<code>JavaScript</code>中，函数允许给参数设置默认值，因此另外一种处理可选参数的方式是，为参数提供一个默认值，此时<code>TypeScript</code>将会把该参数识别为可选参数：</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> getArea</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">a</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> b</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  a</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> b</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">getArea</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">))     </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 4</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">getArea</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">))  </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 20</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>给一个参数设置了默认值后，就不再受<code>TypeScript</code>可选参数必须在最后一个位置的限制了</p></div><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> getArea</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">b</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> a</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  a</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> b</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 传递一个undefined占位,undefined不影响参数1的默认值，仅作占位用</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">getArea</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66;">undefined</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)) </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 4</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">getArea</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">))        </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 20</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="剩余参数" tabindex="-1">剩余参数 <a class="header-anchor" href="#剩余参数" aria-label="Permalink to &quot;剩余参数&quot;">​</a></h3><p>在<code>ES6</code>中，可以使用<code>...</code>符号进行传递剩余参数，在<code>TypeScript</code>中，依然可以这么做</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// rest是一个数组，可以使用数组的类型来定义它</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> getTotal</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">a</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;"> ...</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">rest</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">[]) {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">  console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">a</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)    </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 1</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">  console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">rest</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// [2, 3, 4]</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">getTotal</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="函数重载" tabindex="-1">函数重载 <a class="header-anchor" href="#函数重载" aria-label="Permalink to &quot;函数重载&quot;">​</a></h3><p>因为在<code>JavaScript</code>中，并没有限制函数参数的个数或者类型，因此<code>JavaScript</code>没有<code>函数重载</code>的概念</p><p>在<code>TypeScript</code>中对于函数重载的理解是：只要函数参数的类型或者函数参数的数量不同时，就可以认为这是两个函数(<code>重载</code>)</p><p>下方示例，前三个都是<code>重载</code>，最后一个才是<code>实现</code>，因为<code>实现</code>只包含了前两个<code>重载</code>，所以第三个<code>重载</code>会报错</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> add</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">a</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> b</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> add</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">a</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> b</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 报错，此重载签名与其实现签名不兼容</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> add</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">a</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> boolean</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> b</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> boolean</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> boolean</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> add</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">a</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> b</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">  if</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">typeof</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> a</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> ===</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &quot;number&quot;</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> &amp;&amp;</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;"> typeof</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> b</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> ===</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &quot;number&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> a</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> b</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">  } </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> a</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &quot;&quot;</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> b</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">add</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)) </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 3</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">add</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&quot;1&quot;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &quot;2&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)) </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 12</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><blockquote><p>在有函数重载时，会优先从第一个进行逐一匹配，因此如果重载函数有包含关系，应该将最精准的函数定义写在最前面</p></blockquote><h2 id="数组类型" tabindex="-1">数组类型 <a class="header-anchor" href="#数组类型" aria-label="Permalink to &quot;数组类型&quot;">​</a></h2><h3 id="两种方法定义数组类型" tabindex="-1">两种方法定义数组类型 <a class="header-anchor" href="#两种方法定义数组类型" aria-label="Permalink to &quot;两种方法定义数组类型&quot;">​</a></h3><p>方法一 数组泛型，Array&lt;type&gt;</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> list</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> Array</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>方法二 type[ ]</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> list</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">[] </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="联合类型数组" tabindex="-1">联合类型数组 <a class="header-anchor" href="#联合类型数组" aria-label="Permalink to &quot;联合类型数组&quot;">​</a></h3><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> tsArray</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">number</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">) [] </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&quot;1&quot;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &#39;2&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="对象类型数组" tabindex="-1">对象类型数组 <a class="header-anchor" href="#对象类型数组" aria-label="Permalink to &quot;对象类型数组&quot;">​</a></h3><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> objArray</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">age</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> }[] </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> [{ </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &quot;AAA&quot;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> age</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 23</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> }]</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> objArray1</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> Array</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&lt;{</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">age</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}&gt; </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> [{</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &quot;AAA&quot;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> age</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 23</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}]</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">interface</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> obj</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  age</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> objArray2</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> obj</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">[] </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> [{ </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &quot;AAA&quot;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> age</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 23</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> }]</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> objArray3</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> Array</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;">obj</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> [{ </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &quot;AAA&quot;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> age</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 23</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> }]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="元组" tabindex="-1">元组 <a class="header-anchor" href="#元组" aria-label="Permalink to &quot;元组&quot;">​</a></h3><p>一个数组的长度是确定的，且每个位置的值的类型也是确定的，那么就可以把这样的数组称为元组</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> nameNumber</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">string</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&#39;1&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>当访问元组中已知位置的索引时，将得到其对应正确的值；当访问元组中未知位置的索引时，会报错</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> tuple</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">string</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&#39;AAA&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 123</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">tuple</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">]) </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 123</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">tuple</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">]) </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 报错</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="类型推断" tabindex="-1">类型推断 <a class="header-anchor" href="#类型推断" aria-label="Permalink to &quot;类型推断&quot;">​</a></h2><p>在以上的所有实例中，为每一个变量提供了相应的类型，也就是<strong>类型注解</strong>。而有些时候，没有为其提供一个确定的类型，但提供了一个确定的值，那么<code>TypeScript</code>会根据给定的值的类型自动推断出这个变量的类型，称为<strong>类型推断</strong></p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> tsNum</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 123</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 类型推断为number</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> tsStr</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &quot;abc&quot;</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 类型推断为string</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> tsFlag</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 类型推断为boolean</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> tsNull</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66;"> null</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 类型推断为any</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> tsUndefined</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66;"> undefined</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 类型推断为any</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> helloWorld</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  hello</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 123</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  world</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &quot;abc&quot;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 类型推断helloWorld的类型为</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// const helloWorld = {</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// hello: number,</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// world: string</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>由上方例子可见，null和undefined不能推断</p><p>另外，函数的参数无法推断，必须指定，但返回值可以推断，但建议写上，更加清晰</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> add</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">num1</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> num2</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> num1</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> num2</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 可以省略函数的返回值类型，因为typescript会基于num1和num1全部为number类型，从而推断出函数返回值为number类型</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> add</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">num1</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> num2</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> num1</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> num2</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="联合类型" tabindex="-1">联合类型 <a class="header-anchor" href="#联合类型" aria-label="Permalink to &quot;联合类型&quot;">​</a></h2><p>表示取值可以为多种类型中的一种，多种类型使用<code>|</code>分隔开</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> value</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">value</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 123</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">value</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &#39;123&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>当使用联合类型的时候，因为<code>TypeScript</code>不确定到底是哪一个类型，所以<code>TypeScript</code>只允许此联合类型中所有类型<code>公用的属性和方法</code></p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// length是string类型独有的属性，不是公用的属性，所以会报错</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> getLength</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">value</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> value</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E06C75;">length</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// toString是string类型和number类型公用的方法，不会报错</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> valueToStr</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">value</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> value</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">toString</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><blockquote><p>当联合类型被赋值后，<code>TypeScript</code>会根据类型推断来确定变量的类型，一旦确定后，则此变量只能使用这种类型的属性和方法</p></blockquote><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> tsValue</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">tsValue</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &#39;123&#39;</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">tsValue</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E06C75;">length</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 类型正确</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">tsValue</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 123</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">tsValue</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E06C75;">length</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 报错</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="交叉类型" tabindex="-1">交叉类型 <a class="header-anchor" href="#交叉类型" aria-label="Permalink to &quot;交叉类型&quot;">​</a></h2><p>一般适用于对象或者函数的&quot;合并&quot;，使用<code>&amp;</code>符号进行连接</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">type</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> result</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> T</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;"> &amp;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> U</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>T &amp; U</code>表示一个新的类型，其中这个类型包含<code>T</code>和<code>U</code>中所有的键，这和<code>JavaScript</code>中的<code>Object.assign()</code>函数的作用非常类似</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> merge</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;">T</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> U</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">to</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> T</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> from</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> U</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> T</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;"> &amp;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> U</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">  for</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> key</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;"> in</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> from</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">    ;(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">to</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;"> as</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> T</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;"> &amp;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> U</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">key</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> from</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">key</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> any</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> to</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;"> as</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> T</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;"> &amp;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> U</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> obj1</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">str</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &quot;abc&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> }</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> obj2</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">num</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 123</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> }</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> result</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> merge</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">obj1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> obj2</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="类型断言" tabindex="-1">类型断言 <a class="header-anchor" href="#类型断言" aria-label="Permalink to &quot;类型断言&quot;">​</a></h2><p>有些情况下typescript没办法自动推断出正确的类型, 就需要手动告诉typescript这个类型</p><p>断言有2种语法, 一种是通过<code>&lt;&gt;</code>, 一种通过<code>as</code></p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// ts推断类型为number|number[],实际上是number[]类型</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> obj</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 0.5</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> &lt;</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 0.2</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;"> ?</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;"> :</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">] </span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 报错,类型“number | number[]”上不存在属性“push”。类型“number”上不存在属性“push”</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">obj</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">push</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 告诉ts, obj为数字数组类型</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">obj</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;"> as</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">[]).</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">push</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">) </span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 告诉ts, obj为数字数组类型</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(&lt;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">[]&gt;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">obj</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">push</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="类型别名" tabindex="-1">类型别名 <a class="header-anchor" href="#类型别名" aria-label="Permalink to &quot;类型别名&quot;">​</a></h2><p><code>type</code>关键字来给一个类型起一个新的名字，类型别名常用于联合类型</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">type</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> Add</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">x</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> y</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> add</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> Add</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">a</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> b</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> a</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> b</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">add</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 类型正确</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">add</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&#39;1&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 报错，类型“string”的参数不能赋给类型“number”的参数。ts(2345)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>与其他类型组合</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">interface</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> A</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">    a</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> number</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">type</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> B</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> A</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">b</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">type</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> C</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> A</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;"> &amp;</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">b</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> aa</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> B</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">    a</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 1</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> bb</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> B</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">    b</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &quot;1&quot;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> cc</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> C</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">    a</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">    b</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&#39;1&#39;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 与泛型组合</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">type</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> D</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;">T</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> A</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> T</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">[]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="类型别名和接口的区别" tabindex="-1">类型别名和接口的区别 <a class="header-anchor" href="#类型别名和接口的区别" aria-label="Permalink to &quot;类型别名和接口的区别&quot;">​</a></h2><p>type和interface都可以定义对象类型</p><p>区别在于：</p><ul><li>type可以定义interface不能定义的类型，如联合类型，字面量类型</li><li>type还可以与其他类型组合</li><li>interface可以继承、声明合并</li></ul><h2 id="字面量类型" tabindex="-1">字面量类型 <a class="header-anchor" href="#字面量类型" aria-label="Permalink to &quot;字面量类型&quot;">​</a></h2><p>字面量类型用来表示一个变量只能取某几个字符串值中的一个</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">type</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> eventName</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &#39;click&#39;</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &#39;scroll&#39;</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &#39;mousemove&#39;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> handleEvent</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">event</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> eventName</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">  console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">event</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">handleEvent</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&#39;click&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)    </span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">handleEvent</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&#39;scroll&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)  </span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">handleEvent</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&#39;dbclick&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)  </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 报错</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="枚举" tabindex="-1">枚举 <a class="header-anchor" href="#枚举" aria-label="Permalink to &quot;枚举&quot;">​</a></h2><p>枚举<code>Enum</code>类型用来表示取值限定在指定的范围，例如一周只能有七天，颜色只能有红、绿、蓝等</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">enum</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> colors</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">  {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  red</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  green</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  blue</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">colors</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">red</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)   </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 0</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">colors</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">green</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 1</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">colors</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">blue</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)  </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>定义一个<code>colors</code>的枚举类型，其取值只能是<code>red</code>、<code>green</code>、<code>blue</code>。从打印的内容中发现，其输出值从0开始，依次累加1。这是枚举类型的默认行为，可以手动设置一个起始值</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">enum</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> colors</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">  {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  red</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  green</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  blue</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">colors</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">red</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)   </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 10</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">colors</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">green</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 11</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">colors</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">blue</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)  </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 12</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>在枚举类型中，不仅可以正向的获取值，还可以通过值反向获取枚举</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">enum</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> colors</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">  {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  red</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  green</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">  blue</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">colors</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">]) </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// red</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">colors</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">11</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">]) </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// green</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">colors</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">12</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">]) </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// blue</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="泛型" tabindex="-1">泛型 <a class="header-anchor" href="#泛型" aria-label="Permalink to &quot;泛型&quot;">​</a></h2><p>根据传入的参数自动判断类型</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> a</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;">T</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">arr</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;">T</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">[])</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;">T</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">[] {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> arr</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> b</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> a</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">([</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">])</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">b</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 类型正确</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">b</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&#39;1&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 报错，不能将类型“string”分配给类型“number”</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,123)]))}const y=i(h,[["render",k]]);export{F as __pageData,y as default};
