import{_ as i,c as a,a2 as n,o as l}from"./chunks/framework.BeuUUHFt.js";const e="/cherish-frontend-blog/assets/rollup-docs-cn.netlify.app_plugin-development_.EEQCVb8K.png",F=JSON.parse('{"title":"插件开发","description":"","frontmatter":{},"headers":[],"relativePath":"5.打包/2.rollup/6.插件开发.md","filePath":"5.打包/2.rollup/6.插件开发.md","lastUpdated":1731997977000}'),t={name:"5.打包/2.rollup/6.插件开发.md"};function p(h,s,r,k,B,d){return l(),a("div",null,s[0]||(s[0]=[n('<h1 id="插件开发" tabindex="-1">插件开发 <a class="header-anchor" href="#插件开发" aria-label="Permalink to &quot;插件开发&quot;">​</a></h1><blockquote><p><a href="https://rollup-docs-cn.netlify.app/plugin-development/#options" target="_blank" rel="noreferrer">https://rollup-docs-cn.netlify.app/plugin-development/#options</a></p></blockquote><h2 id="插件开发约定" tabindex="-1">插件开发约定 <a class="header-anchor" href="#插件开发约定" aria-label="Permalink to &quot;插件开发约定&quot;">​</a></h2><ul><li>插件应该有一个明确的名称，并以<code>rollup-plugin-</code>作为前缀。</li><li>在<code>package.json</code>中包含<code>rollup-plugin</code>关键字。</li><li>插件应该被测试，我们推荐 <a href="https://github.com/mochajs/mocha" target="_blank" rel="noreferrer">mocha</a> 或 <a href="https://github.com/avajs/ava" target="_blank" rel="noreferrer">ava</a>，它们支持 Promise。</li><li>可能的话，使用异步方法，例如 <code>fs.readFile</code> 而不是 <code>fs.readFileSync</code></li><li>用英文文档描述你的插件。</li><li>确保如果适当，你的插件输出正确的源映射。</li><li>如果插件使用“虚拟模块”（例如用于辅助函数），请使用<code>\\0</code>前缀模块 ID。这可以防止其他插件尝试处理它</li></ul><h2 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h2><h3 id="name" tabindex="-1">name <a class="header-anchor" href="#name" aria-label="Permalink to &quot;name&quot;">​</a></h3><p>插件的名称，用于错误消息和警告</p><h3 id="version" tabindex="-1">version <a class="header-anchor" href="#version" aria-label="Permalink to &quot;version&quot;">​</a></h3><p>插件的版本，用于插件间通信场景</p><h2 id="构建钩子流程" tabindex="-1">构建钩子流程 <a class="header-anchor" href="#构建钩子流程" aria-label="Permalink to &quot;构建钩子流程&quot;">​</a></h2><p>构建钩子在构建阶段运行，该阶段由 <code>rollup.rollup(inputOptions)</code> 触发。它们主要涉及在 Rollup 处理输入文件之前定位、提供和转换输入文件。构建阶段的第一个钩子是 <a href="https://rollup-docs-cn.netlify.app/plugin-development/#options" target="_blank" rel="noreferrer"><code>options</code></a>，最后一个钩子始终是 <a href="https://rollup-docs-cn.netlify.app/plugin-development/#buildend" target="_blank" rel="noreferrer"><code>buildEnd</code></a>。如果有构建错误，则在此之后将调用 <a href="https://rollup-docs-cn.netlify.app/plugin-development/#closebundle" target="_blank" rel="noreferrer"><code>closeBundle</code></a></p><p>此外，在监视模式下，<a href="https://rollup-docs-cn.netlify.app/plugin-development/#watchchange" target="_blank" rel="noreferrer"><code>watchChange</code></a> 钩子可以在任何时候触发，以通知当前运行生成输出后将触发新的运行。另外，当监视器关闭时，<a href="https://rollup-docs-cn.netlify.app/plugin-development/#closewatcher" target="_blank" rel="noreferrer"><code>closeWatcher</code></a> 钩子将被触发。</p><p>有关在输出生成阶段运行以修改生成的输出的钩子，请参见 <a href="https://rollup-docs-cn.netlify.app/plugin-development/#output-generation-hooks" target="_blank" rel="noreferrer">输出生成钩子</a>。</p><p>![rollup-docs-cn.netlify.app_plugin-development_ (1)](../../imgs/rollup-docs-cn.netlify.app_plugin-development_ (1).png)</p><p><img src="'+e+`" alt="rollup-docs-cn.netlify.app_plugin-development_"></p><h2 id="options" tabindex="-1">options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;options&quot;">​</a></h2><p>替换或操作传递给 <code>rollup.rollup</code> 的选项对象。返回 <code>null</code> 不会替换任何内容。如果只需要读取选项，则建议使用 <a href="https://rollup-docs-cn.netlify.app/plugin-development/#buildstart" target="_blank" rel="noreferrer"><code>buildStart</code></a> 钩子，因为该钩子可以访问所有 <code>options</code> 钩子的转换考虑后的选项</p><p>这是唯一一个没有访问大多数 <a href="https://rollup-docs-cn.netlify.app/plugin-development/#plugin-context" target="_blank" rel="noreferrer">插件上下文</a> 实用函数的钩子，因为它在 Rollup 完全配置之前运行</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;"> default</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;"> function</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> myExample</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &#39;my-example&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 此名称将出现在警告和错误中</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">    options</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">options</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">      console</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&#39;options&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> options</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="resolveid" tabindex="-1">resolveId <a class="header-anchor" href="#resolveid" aria-label="Permalink to &quot;resolveId&quot;">​</a></h2><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">type</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> ResolveIdHook</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">	source</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">	importer</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> undefined</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">	options</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">		assertions</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> Record</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">string</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">		custom</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> { [</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">plugin</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">]</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> any</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> };</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">		isEntry</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> boolean</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> ResolveIdResult</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">type</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> ResolveIdResult</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> null</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> false</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> PartialResolvedId</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">interface</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> PartialResolvedId</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">	id</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">	external</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> boolean</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &#39;absolute&#39;</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &#39;relative&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">	assertions</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> Record</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">string</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">	meta</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> { [</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">plugin</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">]</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> any</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">	moduleSideEffects</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> boolean</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &#39;no-treeshake&#39;</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">	resolvedBy</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">	syntheticNamedExports</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> boolean</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> null</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>定义一个自定义解析器。解析器可以用于定位第三方依赖项等</p><h3 id="source" tabindex="-1">source <a class="header-anchor" href="#source" aria-label="Permalink to &quot;source&quot;">​</a></h3><p>这里的 <code>source</code> 就是导入语句中的导入目标，例如：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">foo</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &#39;../bar.js&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这个 source 的路径是 <code>&quot;../bar.js&quot;</code></p><h3 id="importer" tabindex="-1">importer <a class="header-anchor" href="#importer" aria-label="Permalink to &quot;importer&quot;">​</a></h3><p>importer是导入模块的完全解析的 id。在解析入口点时，<code>importer</code> 通常为 <code>undefined</code>。这里的一个例外是通过 <a href="https://rollup-docs-cn.netlify.app/plugin-development/#this-emitfile" target="_blank" rel="noreferrer"><code>this.emitFile</code></a> 生成的入口点，这里可以提供一个 <code>importer</code> 参数</p><h3 id="isentry" tabindex="-1">isEntry <a class="header-anchor" href="#isentry" aria-label="Permalink to &quot;isEntry&quot;">​</a></h3><p>对于这些情况，<code>isEntry</code> 选项将告诉你我们正在解析用户定义的入口点、已发出的块，还是是否为 <a href="https://rollup-docs-cn.netlify.app/plugin-development/#this-resolve" target="_blank" rel="noreferrer"><code>this.resolve</code></a> 上下文函数提供了 <code>isEntry</code> 参数</p><h2 id="load" tabindex="-1">load <a class="header-anchor" href="#load" aria-label="Permalink to &quot;load&quot;">​</a></h2><h2 id="插件上下文" tabindex="-1">插件上下文 <a class="header-anchor" href="#插件上下文" aria-label="Permalink to &quot;插件上下文&quot;">​</a></h2><p>可以通过 <code>this</code> 从大多数<a href="https://rollup-docs-cn.netlify.app/plugin-development/#build-hooks" target="_blank" rel="noreferrer">钩子</a>中访问一些实用函数和信息位：</p><p>rollup通过一个单独的入口点公开了它用来在命令行界面中加载配置文件的工具函数，为加载配置提供帮助，此工具函数接收一个解析过的<code>fileName</code>（文件路径）和可选的包含命令行参数的对象：</p>`,34)]))}const c=i(t,[["render",p]]);export{F as __pageData,c as default};
