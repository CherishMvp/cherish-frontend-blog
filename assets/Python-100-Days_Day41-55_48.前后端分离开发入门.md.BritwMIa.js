import{_ as i,c as a,a2 as n,o as l}from"./chunks/framework.BeuUUHFt.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Python-100-Days/Day41-55/48.前后端分离开发入门.md","filePath":"Python-100-Days/Day41-55/48.前后端分离开发入门.md","lastUpdated":1731997977000}'),p={name:"Python-100-Days/Day41-55/48.前后端分离开发入门.md"};function h(t,s,B,e,k,r){return l(),a("div",null,s[0]||(s[0]=[n(`<h2 id="前后端分离开发入门" tabindex="-1">前后端分离开发入门 <a class="header-anchor" href="#前后端分离开发入门" aria-label="Permalink to &quot;前后端分离开发入门&quot;">​</a></h2><p>在传统的Web应用开发中，大多数的程序员会将浏览器作为前后端的分界线。将浏览器中为用户进行页面展示的部分称之为前端，而将运行在服务器为前端提供业务逻辑和数据准备的所有代码统称为后端。所谓前后端分离的开发，就是前后端工程师约定好数据交互接口，并行的进行开发和测试，后端只提供数据，不负责将数据渲染到页面上，前端通过HTTP请求获取数据并负责将数据渲染到页面上，这个工作是交给浏览器中的JavaScript代码来完成。</p><p>使用前后端分离开发有诸多的好处，下面我们简要的说下这些好处：</p><ol><li><strong>提升开发效率</strong>。前后端分离以后，可以实现前后端代码的解耦，只要前后端沟通约定好应用所需接口以及接口参数，便可以开始并行开发，无需等待对方的开发工作结束。在这种情况下，前后端工程师都可以只专注于自己的开发工作，有助于打造出更好的团队。除此之外，在前后端分离的开发模式下，即使需求发生变更，只要接口与数据格式不变，后端开发人员就不需要修改代码，只要前端进行变动即可。</li><li><strong>增强代码的可维护性</strong>。前后端分离后，应用的代码不再是前后端混合，只有在运行期才会有调用依赖关系，这样的话维护代码的工作将变得轻松愉快很多，再不会牵一发而动全身。当你的代码变得简明且整洁时，代码的可读性和可维护性都会有质的提升。</li><li><strong>支持多终端和服务化架构</strong>。前后端分离后，同一套数据接口可以为不同的终端提供服务，更有助于打造多终端应用；此外，由于后端提供的接口之间可以通过HTTP(S)进行调用，有助于打造服务化架构（包括微服务）。</li></ol><p>接下来我们就用前后端分离的方式来改写之前的投票应用。</p><h3 id="返回json格式的数据" tabindex="-1">返回JSON格式的数据 <a class="header-anchor" href="#返回json格式的数据" aria-label="Permalink to &quot;返回JSON格式的数据&quot;">​</a></h3><p>刚才说过，在前后端分离的开发模式下，后端需要为前端提供数据接口，这些接口通常返回JSON格式的数据。在Django项目中，我们可以先将对象处理成字典，然后就可以利用Django封装的<code>JsonResponse</code>向浏览器返回JSON格式的数据，具体的做法如下所示。</p><div class="language-Python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> show_subjects</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">request</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">    queryset </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> Subject</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">objects</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">all</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">    subjects </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> []</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> subject </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> queryset</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">        subjects</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">append</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">            &#39;no&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">: subject.no,</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">            &#39;name&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">: subject.name,</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">            &#39;intro&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">: subject.intro,</span></span>
<span class="line"><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">            &#39;isHot&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">: subject.is_hot</span></span>
<span class="line"><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">        })</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> JsonResponse</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(subjects, </span><span style="--shiki-light:#BBBBBB;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">safe</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66;">False</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>上面的代码中，我们通过循环遍历查询学科得到的<code>QuerySet</code>对象，将每个学科的数据处理成一个字典，在将字典保存在名为<code>subjects</code>的列表容器中，最后利用<code>JsonResponse</code>完成对列表的序列化，向浏览器返回JSON格式的数据。由于<code>JsonResponse</code>序列化的是一个列表而不是字典，所以需要指定<code>safe</code>参数的值为<code>False</code>才能完成对<code>subjects</code>的序列化，否则会产生<code>TypeError</code>异常。</p><p>可能大家已经发现了，自己写代码将一个对象转成字典是比较麻烦的，如果对象的属性很多而且某些属性又关联到一个比较复杂的对象时，情况会变得更加糟糕。为此我们可以使用一个名为<code>bpmappers</code>的三方库来简化将对象转成字典的操作，这个三方库本身也提供了对Django框架的支持。</p><p>安装三方库<code>bpmappers</code>。</p><div class="language-Shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Shell</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">pip</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379;"> bpmappers</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>编写映射器（实现对象到字典转换）。</p><div class="language-Python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> bpmappers</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">djangomodel </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> ModelMapper</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> poll2</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">models </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> Subject</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> SubjectMapper</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;">ModelMapper</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">   </span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">    class</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> Meta</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">        model </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> Subject</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>修改视图函数。</p><div class="language-Python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> show_subjects</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">request</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">    queryset </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> Subject</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">objects</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">all</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">    subjects </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> []</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> subject </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> queryset</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">        subjects</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">append</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">SubjectMapper</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(subject).</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">as_dict</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">())</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> JsonResponse</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(subjects, </span><span style="--shiki-light:#BBBBBB;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">safe</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66;">False</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>配置URL映射。</p><div class="language-Python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">urlpatterns </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">    path</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&#39;api/subjects/&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">, show_subjects),</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>然后访问该接口，可以得到如下所示的JSON格式数据。</p><div class="language-JSON vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JSON</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">[</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="--shiki-light:#F8F8F8;--shiki-dark:#E06C75;">        &quot;no&quot;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#F8F8F8;--shiki-dark:#E06C75;">        &quot;name&quot;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &quot;Python全栈+人工智能&quot;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#F8F8F8;--shiki-dark:#E06C75;">        &quot;intro&quot;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &quot;Python是一种计算机程序设计语言。是一种面向对象的动态类型语言，最初被设计用于编写自动化脚本(shell)，随着版本的不断更新和语言新功能的添加，越来越多被用于独立的、大型项目的开发。&quot;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#F8F8F8;--shiki-dark:#E06C75;">        &quot;is_hot&quot;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66;"> true</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">    }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 此处省略下面的内容</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>如果不希望在JSON数据中显示学科的成立时间，我们可以在映射器中排除<code>create_date</code>属性；如果希望将是否为热门学科对应的键取名为<code>isHot</code>（默认的名字是<code>is_hot</code>），也可以通过修改映射器来做到。具体的做法如下所示：</p><div class="language-Python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Python</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> bpmappers </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> RawField</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> bpmappers</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">djangomodel </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> ModelMapper</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> poll2</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">models </span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> Subject</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> SubjectMapper</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;">ModelMapper</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">    isHot </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> RawField</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&#39;is_hot&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">    class</span><span style="--shiki-light:#B392F0;--shiki-dark:#E5C07B;"> Meta</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">        model </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> Subject</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">        exclude </span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&#39;is_hot&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> )</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>再次查看学科接口返回的JSON数据。</p><div class="language-JSON vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JSON</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">[</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="--shiki-light:#F8F8F8;--shiki-dark:#E06C75;">        &quot;no&quot;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#F8F8F8;--shiki-dark:#D19A66;"> 101</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#F8F8F8;--shiki-dark:#E06C75;">        &quot;name&quot;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &quot;Python全栈+人工智能&quot;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#F8F8F8;--shiki-dark:#E06C75;">        &quot;intro&quot;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &quot;Python是一种计算机程序设计语言。是一种面向对象的动态类型语言，最初被设计用于编写自动化脚本(shell)，随着版本的不断更新和语言新功能的添加，越来越多被用于独立的、大型项目的开发。&quot;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#F8F8F8;--shiki-dark:#E06C75;">        &quot;isHot&quot;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#79B8FF;--shiki-dark:#D19A66;"> true</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">    }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 此处省略下面的内容</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>关于<code>bpmappers</code>详细的使用指南，请参考它的<a href="https://bpmappers.readthedocs.io/en/stable/" target="_blank" rel="noreferrer">官方文档</a>，这个官方文档是用日语书写的，可以使用浏览器的翻译功能将它翻译成你熟悉的语言即可。</p><h3 id="使用vue-js渲染页面" tabindex="-1">使用Vue.js渲染页面 <a class="header-anchor" href="#使用vue-js渲染页面" aria-label="Permalink to &quot;使用Vue.js渲染页面&quot;">​</a></h3><p>接下来我们通过前端框架Vue.js来实现页面的渲染。如果希望全面的了解和学习Vue.js，建议阅读它的<a href="https://cn.vuejs.org/v2/guide/" target="_blank" rel="noreferrer">官方教程</a>或者在<a href="https://www.youtube.com/" target="_blank" rel="noreferrer">YouTube</a>上搜索Vue.js的新手教程（Vue.js Crash Course）进行学习。</p><p>重新改写subjects.html页面，使用Vue.js来渲染页面。</p><div class="language-HTML vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">HTML</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&lt;!</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">DOCTYPE</span><span style="--shiki-light:#B392F0;--shiki-dark:#D19A66;"> html</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">html</span><span style="--shiki-light:#B392F0;--shiki-dark:#D19A66;"> lang</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&quot;en&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">head</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">meta</span><span style="--shiki-light:#B392F0;--shiki-dark:#D19A66;"> charset</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&quot;UTF-8&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">title</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;学科信息&lt;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">title</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">style</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">		/* 此处省略层叠样式表 */</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">style</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">head</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">body</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#B392F0;--shiki-dark:#D19A66;"> id</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&quot;container&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">h1</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;扣丁学堂所有学科&lt;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">h1</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">hr</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#B392F0;--shiki-dark:#D19A66;"> id</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&quot;main&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">dl</span><span style="--shiki-light:#B392F0;--shiki-dark:#D19A66;"> v-for</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&quot;subject in subjects&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">                &lt;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">dt</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">                    &lt;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">a</span><span style="--shiki-light:#B392F0;--shiki-dark:#D19A66;"> :href</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&quot;&#39;/static/html/teachers.html?sno=&#39; + subject.no&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">                        {{ subject.name }}</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">                    &lt;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">a</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">                    &lt;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">img</span><span style="--shiki-light:#B392F0;--shiki-dark:#D19A66;"> v-if</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&quot;subject.is_hot&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#D19A66;"> src</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&quot;/static/images/hot-icon-small.png&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">                &lt;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">dt</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">                &lt;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">dd</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;{{ subject.intro }}&lt;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">dd</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">            &lt;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">dl</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">        &lt;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#B392F0;--shiki-dark:#D19A66;"> src</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.11/vue.min.js&quot;</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;">        let</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> app</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;"> Vue</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">            el</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;"> &#39;#main&#39;</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">            data</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">                subjects</span><span style="--shiki-light:#F97583;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> []</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">            }</span><span style="--shiki-light:#BBBBBB;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">            created</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">                fetch</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#FFAB70;--shiki-dark:#98C379;">&#39;/api/subjects/&#39;</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">                    .</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">then</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">resp</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;"> =&gt;</span><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;"> resp</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">json</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">())</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">                    .</span><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">then</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#B392F0;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">json</span><span style="--shiki-light:#F97583;--shiki-dark:#C678DD;"> =&gt;</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#79B8FF;--shiki-dark:#E5C07B;">                        this</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;">subjects</span><span style="--shiki-light:#F97583;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#B392F0;--shiki-dark:#E06C75;"> json</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">                    })</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">        })</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">body</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#FFAB70;--shiki-dark:#E06C75;">html</span><span style="--shiki-light:#B392F0;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><p>前后端分离的开发需要将前端页面作为静态资源进行部署，项目实际上线的时候，我们会对整个Web应用进行动静分离，静态资源通过Nginx或Apache服务器进行部署，生成动态内容的Python程序部署在uWSGI或者Gunicorn服务器上，对动态内容的请求由Nginx或Apache路由到uWSGI或Gunicorn服务器上。</p><p>在开发阶段，我们通常会使用Django自带的测试服务器，如果要尝试前后端分离，可以先将静态页面放在之前创建的放静态资源的目录下，具体的做法可以参考<a href="https://gitee.com/jackfrued/django19062" target="_blank" rel="noreferrer">项目完整代码</a>。</p>`,31)]))}const g=i(p,[["render",h]]);export{d as __pageData,g as default};
