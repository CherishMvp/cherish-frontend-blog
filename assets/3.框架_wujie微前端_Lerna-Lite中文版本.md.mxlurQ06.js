import{_ as a,c as e,a2 as i,o as n}from"./chunks/framework.BeuUUHFt.js";const c=JSON.parse('{"title":"Lerna-Lite","description":"","frontmatter":{},"headers":[],"relativePath":"3.框架/wujie微前端/Lerna-Lite中文版本.md","filePath":"3.框架/wujie微前端/Lerna-Lite中文版本.md","lastUpdated":1731997977000}'),l={name:"3.框架/wujie微前端/Lerna-Lite中文版本.md"};function t(r,s,p,h,d,o){return n(),e("div",null,s[0]||(s[0]=[i(`<h1 id="lerna-lite" tabindex="-1">Lerna-Lite <a class="header-anchor" href="#lerna-lite" aria-label="Permalink to &quot;Lerna-Lite&quot;">​</a></h1><p><a href="https://blog.cjw.design/blog/frontend/lerna#lerna-%E5%91%BD%E4%BB%A4%E4%BB%8B%E7%BB%8D" target="_blank" rel="noreferrer">https://blog.cjw.design/blog/frontend/lerna#lerna-命令介绍</a></p><h2 id="lerna-lite是原版lerna的超轻版" tabindex="-1">Lerna-Lite是原版Lerna的超轻版 <a class="header-anchor" href="#lerna-lite是原版lerna的超轻版" aria-label="Permalink to &quot;Lerna-Lite是原版Lerna的超轻版&quot;">​</a></h2><h2 id="开始" tabindex="-1">开始 <a class="header-anchor" href="#开始" aria-label="Permalink to &quot;开始&quot;">​</a></h2><p>让我们首先将 Lerna-Lite CLI 作为项目的开发依赖项安装，然后运行 <code>init</code> 命令以开始使用（有关所有选项，请参阅 <a href="https://github.com/lerna-lite/lerna-lite/tree/main/packages/init#readme" target="_blank" rel="noreferrer">init#readme</a>）。请注意，必须始终安装 CLI，然后继续安装任何其他可选命令（CLI 仅包含 <code>init</code> 该命令），有关详细信息，请参阅安装表。</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 本地或者全局下载Lerna-Lite CLI(\`init\`是被下载的唯一命令)</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379;"> npm</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66;"> -g</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379;"> @lerna-lite/cli</span><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # pnpm add -g @lerna-lite/cli</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 创建你的单存储库（单存储库是包含多个逻辑项目的存储库） 并且初始化Lerna-Lite</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379;"> mkdir</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379;"> lerna-repo</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379;"> cd</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379;"> lerna-repo</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379;"> lerna</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379;"> init</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6B737C;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 对于npm/yarn (only) workspaces 添加 --use-workspaces</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379;"> lerna</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379;"> init</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66;"> --use-workspaces</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>这将创建一个 <code>lerna.json</code> 配置文件和一个<code>packages</code>文件夹，因此您的 <code>packages</code> 文件夹现在应如下所示：</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">lerna-repo/</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">  packages/</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">    package-a</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">  package.json</span></span>
<span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">  lerna.json</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>最后安装您感兴趣的命令（ ， ， <code>publish</code> ， <code>version</code> ， <code>run</code> <code>exec</code> ...</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes min-dark one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B392F0;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379;"> npm</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379;"> i</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#98C379;"> @lerna-lite/publish</span><span style="--shiki-light:#9DB1C5;--shiki-dark:#D19A66;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><blockquote><p>Lerna-Lite 是完全模块化的，与Lerna相反，在本地或全局安装 CLI 只会为您提供 <code>init</code> 命令。请确保安装您感兴趣的其他命令（见下表）。</p></blockquote><p>如果您不熟悉 Lerna-Lite，您还可以运行 lerna init 命令，该命令将以最少的设置为您创建。 <code>lerna.json</code> 如果使用 npm 以外的其他客户端，请确保更新 中的 <code>npmClient</code> <code>lerna.json</code> 属性（例如： <code>&quot;npmClient&quot;: &quot;yarn&quot;</code> 或 <code>&quot;pnpm&quot;</code> ）。</p><blockquote><p>注意 请确保您已创建配置文件 <code>lerna.json</code> 并使用固定或 <code>independent</code> 模式定义 <code>version</code> 属性。如果您缺少其中任何一个，则会引发错误。</p></blockquote><h2 id="待完成" tabindex="-1">待完成 <a class="header-anchor" href="#待完成" aria-label="Permalink to &quot;待完成&quot;">​</a></h2><p>感觉 lerna-lite 文档还是不够完全的，一些参数应该还是需要看 lerna 的 文档</p>`,16)]))}const b=a(l,[["render",t]]);export{c as __pageData,b as default};
